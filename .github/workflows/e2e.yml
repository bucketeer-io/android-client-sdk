name: e2e

on:
  workflow_dispatch:
  workflow_call:

jobs:
  e2e:
    # macos-13-xlarge is an M1 mac (which has no Android SDK)
    runs-on: ubuntu-latest
    timeout-minutes: 45
    strategy:
      matrix:
        api-level:
          - 32
        target:
          - google_apis
        arch:
          - x86_64
        cores:
          - 8
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@3a4f6e1af504cf6a31855fa899c6aa5355ba6c12 # v4.7.0
        with:
          distribution: "temurin"
          java-version: 17

      # Setup Gradle with caching
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@8379f6a1328ee0e06e2bb424dadb7b159856a326 # v4.4.0
        with:
          gradle-home-cache-cleanup: true
          cache-read-only: false

      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}-${{ matrix.target }}-${{ matrix.arch }}
          restore-keys: |
            avd-${{ matrix.api-level }}-${{ matrix.target }}-
            avd-${{ matrix.api-level }}-

      # Cache Android SDK components
      - name: Cache Android SDK
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: |
            ~/.android/sdk
            ~/.android/cmdline-tools
          key: android-sdk-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            android-sdk-${{ runner.os }}-

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@1dcd0090116d15e7c562f8db72807de5e036a4ed # v2.34.0
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: ${{ matrix.arch }}
          cores: ${{ matrix.cores }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -memory 2048
          disable-animations: false
          script: echo "Generated AVD snapshot for caching"

      # Pre-download dependencies
      - name: Download dependencies
        run: ./gradlew dependencies --no-daemon

      - name: Run Android integration tests
        env:
          API_KEY: ${{ secrets.E2E_API_KEY }}
          API_ENDPOINT: ${{ secrets.E2E_API_ENDPOINT }}
          # Optimized Gradle options for CI
          GRADLE_OPTS: -Dorg.gradle.daemon=true -Dorg.gradle.parallel=true -Dorg.gradle.caching=true -Dorg.gradle.jvmargs="-Xmx2g -XX:MaxMetaspaceSize=1g -XX:+HeapDumpOnOutOfMemoryError"
        uses: reactivecircus/android-emulator-runner@1dcd0090116d15e7c562f8db72807de5e036a4ed # v2.34.0
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: ${{ matrix.arch }}
          cores: ${{ matrix.cores }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -memory 2048
          disable-animations: true
          # Run tests with optimized Gradle settings
          script: ./gradlew uninstallAll connectedCheck --stacktrace --build-cache

      - name: Upload Bucketeer build reports
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: bucketeer-instrumentation-build-reports
          path: bucketeer/build/reports
