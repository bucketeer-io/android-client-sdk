import java.nio.file.Files
import java.nio.file.Paths

plugins {
  alias(libs.plugins.android.application)
  alias(libs.plugins.kotlin.android)
  alias(libs.plugins.kotlinter)
}

def properties = new Properties()
if (Files.exists(Paths.get("$rootProject.rootDir/local.properties"))) {
  properties.load(rootProject.file('local.properties').newDataInputStream())
}

android {
  namespace = "io.bucketeer.sdk.android.sample"
  compileSdk project.findProperty("android.compileSdk") as int

  defaultConfig {
    applicationId "io.bucketeer.sample"
    minSdkVersion project.findProperty("android.minSdkVersion") as int
    targetSdkVersion project.findProperty("android.targetSdkVersion") as int
    versionCode 1
    versionName "1.0"
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    def API_KEY = properties.getProperty("api_key") ?: System.getenv("API_KEY")
    def API_ENDPOINT = properties.getProperty("api_endpoint") ?: System.getenv("API_ENDPOINT")
    buildConfigField("String", "API_KEY", "\"${API_KEY}\"")
    buildConfigField("String", "API_ENDPOINT", "\"${API_ENDPOINT}\"")
  }
  signingConfigs {
    release {
      storeFile rootProject.file("debug.keystore")
      storePassword "android"
      keyAlias "androiddebugkey"
      keyPassword "android"
    }
  }
  buildTypes {
    release {
      minifyEnabled true
      consumerProguardFiles 'proguard-rules.pro'
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      signingConfig signingConfigs.release
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  kotlinOptions {
    jvmTarget = "1.8"
  }

  buildFeatures {
    buildConfig = true
  }
}

dependencies {
  implementation projects.bucketeer

  implementation libs.stetho
  implementation libs.androidx.appcompat
  implementation libs.materialComponents
  implementation libs.androidx.lifecycle.runtime
  implementation libs.androidx.lifecycle.process

  implementation libs.kotlin.coroutines.android
}
repositories {
  mavenCentral()
}
